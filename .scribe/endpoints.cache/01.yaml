## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Pedidos de Viagem'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/travels
    metadata:
      groupName: 'Pedidos de Viagem'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Listar todos os pedidos de viagem'
      description: |-
        Retorna todos os pedidos de viagem cadastrados. Caso um status seja informado na URL (`/status/{status}`),
        a listagem será filtrada por esse status.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      status:
        name: status
        description: 'optional Status para filtro opcional.'
        required: false
        example: request
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      status: request
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "userId": 2,
                "applicantName": "Hamiton Gláucio de Oliveira Júnior",
                "destination": "São Paulo",
                "departureDate": "2025-07-01T00:00:00.000000Z",
                "returnDate": "2025-07-02T00:00:00.000000Z",
                "status": "cancelled"
              },
              {
                "id": 2,
                "userId": 2,
                "applicantName": "Hamiton Gláucio de Oliveira Júnior",
                "destination": "São Paulo",
                "departureDate": "2025-10-05T00:00:00.000000Z",
                "returnDate": "2025-10-06T00:00:00.000000Z",
                "status": "approved"
              },
              {
                "id": 3,
                "userId": 3,
                "applicantName": "Hamiton Gláucio de Oliveira Júnior",
                "destination": "Salvador",
                "departureDate": "2025-10-07T00:00:00.000000Z",
                "returnDate": "2025-10-06T00:00:00.000000Z",
                "status": "request"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/travels
    metadata:
      groupName: 'Pedidos de Viagem'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Criar novo pedido de viagem'
      description: 'Cria um novo pedido de viagem com os dados fornecidos no corpo da requisição.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      0:
        name: '0'
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      applicant_name:
        name: applicant_name
        description: 'Nome do solicitante da viagem.'
        required: true
        example: 'José Alves'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      destination:
        name: destination
        description: 'O destino da viagem.'
        required: true
        example: Recife
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      departure_date:
        name: departure_date
        description: 'Data de ida no formato AAAA-MM-DD.'
        required: true
        example: '2025-04-10'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      return_date:
        name: return_date
        description: 'Data de volta no formato AAAA-MM-DD.'
        required: true
        example: '2025-04-12'
        type: date
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      applicant_name: 'José Alves'
      destination: Recife
      departure_date: '2025-04-10'
      return_date: '2025-04-12'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "travelRequest": {
              "id": 7,
              "userId": 3,
              "applicantName": "José Alves",
              "destination": "Recife",
              "departureDate": "2025-04-10T00:00:00.000000Z",
              "returnDate": "2025-04-12T00:00:00.000000Z",
              "status": "request"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Validation failed.",
            "errors": {
              "applicant_name": [
                "The name is required."
              ],
              "destination": [
                "The destination is required."
              ],
              "departure_date": [
                "The start date is required."
              ],
              "return_date": [
                "The return date is required."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/travels/user
    metadata:
      groupName: 'Pedidos de Viagem'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Listar pedidos de viagem do usuário autenticado'
      description: 'Retorna todos os pedidos de viagem feitos pelo usuário atualmente autenticado.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 3,
                "userId": 3,
                "applicantName": "Hamiton Gláucio de Oliveira Júnior",
                "destination": "Salvador",
                "departureDate": "2025-10-07T00:00:00.000000Z",
                "returnDate": "2025-10-06T00:00:00.000000Z",
                "status": "request"
              },
              {
                "id": 4,
                "userId": 3,
                "applicantName": "Hamiton Gláucio de Oliveira Júnior",
                "destination": "João Pessoa",
                "departureDate": "2025-10-07T00:00:00.000000Z",
                "returnDate": "2025-10-06T00:00:00.000000Z",
                "status": "request"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Token inválido ou expirado"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/travels/filter
    metadata:
      groupName: 'Pedidos de Viagem'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Filtrar pedidos de viagem'
      description: |-
        Permite buscar pedidos de viagem utilizando filtros combinados como destino, data de ida e data de volta.
        Todos os filtros são opcionais e podem ser usados em conjunto.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      destination:
        name: destination
        description: 'O destino desejado.'
        required: false
        example: 'São Paulo'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      departure_start:
        name: departure_start
        description: 'date Data mínima de ida (inclusive).'
        required: false
        example: '2025-04-10'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      departure_end:
        name: departure_end
        description: 'date Data máxima de ida (inclusive).'
        required: false
        example: '2025-04-20'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      return_start:
        name: return_start
        description: 'date Data mínima de volta (inclusive).'
        required: false
        example: '2025-04-15'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      return_end:
        name: return_end
        description: 'date Data máxima de volta (inclusive).'
        required: false
        example: '2025-04-25'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      destination: 'São Paulo'
      departure_start: '2025-04-10'
      departure_end: '2025-04-20'
      return_start: '2025-04-15'
      return_end: '2025-04-25'
    bodyParameters:
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-07T10:53:34'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-04-07T10:53:34'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      destination:
        name: destination
        description: ''
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      byUser:
        name: byUser
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      start_date: '2025-04-07T10:53:34'
      end_date: '2025-04-07T10:53:34'
      destination: architecto
      byUser: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "userId": 2,
                "applicantName": "Hamiton Gláucio de Oliveira Júnior",
                "destination": "São Paulo",
                "departureDate": "2025-07-01T00:00:00.000000Z",
                "returnDate": "2025-07-02T00:00:00.000000Z",
                "status": "cancelled"
              },
              {
                "id": 2,
                "userId": 2,
                "applicantName": "Hamiton Gláucio de Oliveira Júnior",
                "destination": "São Paulo",
                "departureDate": "2025-10-05T00:00:00.000000Z",
                "returnDate": "2025-10-06T00:00:00.000000Z",
                "status": "approved"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Invalid or missing JWT token",
            "error": "Could not decode token: Error while decoding from Base64Url, invalid base64 characters detected"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/travels/notifications
    metadata:
      groupName: 'Pedidos de Viagem'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Listar notificações de pedidos de viagem'
      description: 'Retorna notificações relacionadas aos pedidos de viagem do usuário autenticado, como atualizações de status.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": "fec1edaf-d628-4b81-a26a-b00e1226dac6",
                "type": "App\\TravelService\\UserInterface\\Notifications\\TravelRequestStatusUpdated",
                "notifiable_type": "App\\AuthService\\Infrastructure\\Eloquent\\User",
                "notifiable_id": 3,
                "data": {
                  "travel_request_id": 2,
                  "status": "approved",
                  "destination": "São Paulo",
                  "departure_date": "2025-10-05",
                  "return_date": "2025-10-06",
                  "message": "Sua solicitação de viagem para São Paulo foi approved."
                },
                "read_at": null,
                "created_at": "2025-04-06T22:16:38.000000Z",
                "updated_at": "2025-04-06T22:16:38.000000Z"
              },
              {
                "id": "c8212df4-fa73-4b2c-959b-d90eb2d6f304",
                "type": "App\\TravelService\\UserInterface\\Notifications\\TravelRequestStatusUpdated",
                "notifiable_type": "App\\AuthService\\Infrastructure\\Eloquent\\User",
                "notifiable_id": 3,
                "data": {
                  "travel_request_id": 1,
                  "status": "cancelled",
                  "destination": "São Paulo",
                  "departure_date": "2025-07-01",
                  "return_date": "2025-07-02",
                  "message": "Sua solicitação de viagem para São Paulo foi cancelled."
                },
                "read_at": null,
                "created_at": "2025-04-06T22:15:58.000000Z",
                "updated_at": "2025-04-06T22:15:58.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "data": []
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/travels/{id}'
    metadata:
      groupName: 'Pedidos de Viagem'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Atualizar status do pedido de viagem'
      description: 'Atualiza o status de um pedido de viagem (por exemplo: approved, rejected, cancelled, etc).'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID do pedido de viagem.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: 'Novo status da viagem.'
        required: true
        example: cancelled
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      status: cancelled
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "travelRequest": {
              "id": 2,
              "userId": 2,
              "applicantName": "Hamiton Gláucio de Oliveira Júnior",
              "destination": "São Paulo",
              "departureDate": "2025-10-05T00:00:00.000000Z",
              "returnDate": "2025-10-06T00:00:00.000000Z",
              "status": "cancelled"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\TravelService\\Infrastructure\\Eloquent\\TravelRequest] 20",
            "exception": "Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "Validation failed.",
            "errors": {
              "status": ["A cancelled request cannot be updated."]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/travels/{id}/cancel'
    metadata:
      groupName: 'Pedidos de Viagem'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Cancelar pedido de viagem'
      description: 'Cancela um pedido de viagem. Viagens com status "approved" só podem ser canceladas se a data de partida ainda não tiver passado.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID do pedido de viagem.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "travelRequest": {
              "id": 3,
              "userId": 3,
              "applicantName": "Hamiton Gláucio de Oliveira Júnior",
              "destination": "Salvador",
              "departureDate": "2025-10-07T00:00:00.000000Z",
              "returnDate": "2025-10-06T00:00:00.000000Z",
              "status": "cancelled"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "message": "A viagem aprovada não pode ser cancelada após a data de partida."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Invalid or missing JWT token",
            "error": "The token has been blacklisted"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Pedido de viagem não encontrado."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/travels/{id}'
    metadata:
      groupName: 'Pedidos de Viagem'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Detalhar pedido de viagem'
      description: 'Retorna os dados completos de um pedido de viagem pelo seu ID.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'ID do pedido de viagem.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "travelRequest": {
              "id": 1,
              "userId": 2,
              "applicantName": "Hamiton Gláucio de Oliveira Júnior",
              "destination": "São Paulo",
              "departureDate": "2025-07-01T00:00:00.000000Z",
              "returnDate": "2025-07-02T00:00:00.000000Z",
              "status": "cancelled"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Pedido de viagem não encontrado."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/travels/status/{status}'
    metadata:
      groupName: 'Pedidos de Viagem'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Listar todos os pedidos de viagem'
      description: |-
        Retorna todos os pedidos de viagem cadastrados. Caso um status seja informado na URL (`/status/{status}`),
        a listagem será filtrada por esse status.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      status:
        name: status
        description: 'optional Status para filtro opcional.'
        required: false
        example: request
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      status: request
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "userId": 2,
                "applicantName": "Hamiton Gláucio de Oliveira Júnior",
                "destination": "São Paulo",
                "departureDate": "2025-07-01T00:00:00.000000Z",
                "returnDate": "2025-07-02T00:00:00.000000Z",
                "status": "cancelled"
              },
              {
                "id": 2,
                "userId": 2,
                "applicantName": "Hamiton Gláucio de Oliveira Júnior",
                "destination": "São Paulo",
                "departureDate": "2025-10-05T00:00:00.000000Z",
                "returnDate": "2025-10-06T00:00:00.000000Z",
                "status": "approved"
              },
              {
                "id": 3,
                "userId": 3,
                "applicantName": "Hamiton Gláucio de Oliveira Júnior",
                "destination": "Salvador",
                "departureDate": "2025-10-07T00:00:00.000000Z",
                "returnDate": "2025-10-06T00:00:00.000000Z",
                "status": "request"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
